{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kweku\\\\Desktop\\\\My Coding Stuff\\\\pomo-spotify-test\\\\spotify-test\\\\src\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player(_ref) {\n  _s();\n\n  let {\n    accessToken,\n    trackUri\n  } = _ref;\n  const [play, setPlay] = useState(false);\n  if (!accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    token: accessToken,\n    showSaveIcon: true,\n    play: true,\n    uris: trackUri ? [trackUri] : []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"RwyEwJduY3JPWFOsoAJvrD+HutA=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Kweku/Desktop/My Coding Stuff/pomo-spotify-test/spotify-test/src/Player.js"],"names":["React","useState","SpotifyPlayer","Player","accessToken","trackUri","play","setPlay"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,eAAe,SAASC,MAAT,OAAyC;AAAA;;AAAA,MAAzB;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAAyB;AACpD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,MAAI,CAACG,WAAL,EAAkB,OAAO,IAAP;AAClB,sBACI,QAAC,aAAD;AACA,IAAA,KAAK,EAAEA,WADP;AAEA,IAAA,YAAY,MAFZ;AAGA,IAAA,IAAI,EAAE,IAHN;AAIA,IAAA,IAAI,EAAEC,QAAQ,GAAG,CAACA,QAAD,CAAH,GAAgB;AAJ9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAZuBF,M;;KAAAA,M","sourcesContent":["import React, { useState } from 'react';\r\nimport SpotifyPlayer from \"react-spotify-web-playback\"\r\n\r\nexport default function Player({accessToken, trackUri}) {\r\n    const [play, setPlay] = useState(false)\r\n\r\n    if (!accessToken) return null\r\n    return (\r\n        <SpotifyPlayer \r\n        token={accessToken}\r\n        showSaveIcon\r\n        play={true}\r\n        uris={trackUri ? [trackUri] : []}\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}