{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kweku\\\\Desktop\\\\My Coding Stuff\\\\pomo-spotify-test\\\\spotify-test\\\\src\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from './useAuth';\nimport TrackSearchResult from './TrackSearchResult';\nimport Player from './Player';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '7134148fb4ca431591f3f11a054bbb83'\n});\nexport default function Dashboard(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState('');\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch('');\n    setLyrics('');\n  }\n\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get('http://localhost:300/lyrics', {\n      params: {\n        track: playingTrack.title,\n        artist: playingTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [playingTrack]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          whiteSpace: \"pre\"\n        },\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"mvwrkyCORFoEiiJp8gBg3aA7BKk=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/Kweku/Desktop/My Coding Stuff/pomo-spotify-test/spotify-test/src/Dashboard.js"],"names":["React","useState","useEffect","useAuth","TrackSearchResult","Player","Container","Form","SpotifyWebApi","axios","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","chooseTrack","track","get","params","title","artist","then","res","data","setAccessToken","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","e","target","value","overflowY","length","whiteSpace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport useAuth from './useAuth';\r\nimport TrackSearchResult from './TrackSearchResult';\r\nimport Player from './Player';\r\nimport { Container, Form } from 'react-bootstrap';\r\nimport SpotifyWebApi from 'spotify-web-api-node';\r\nimport axios from 'axios';\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId : '7134148fb4ca431591f3f11a054bbb83',\r\n})\r\n\r\nexport default function Dashboard({code}) {\r\n    const accessToken = useAuth(code)\r\n    const [search, setSearch] = useState('');\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [playingTrack, setPlayingTrack] = useState()\r\n    const [lyrics, setLyrics] = useState('')\r\n\r\n    function chooseTrack(track) {\r\n        setPlayingTrack(track)\r\n        setSearch('')\r\n        setLyrics('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!playingTrack) return\r\n        axios.get('http://localhost:300/lyrics', {\r\n            params: {\r\n                track:playingTrack.title,\r\n                artist: playingTrack.artist\r\n            }\r\n        }).then(res => {\r\n            setLyrics(res.data.lyrics)\r\n        })\r\n    }, [playingTrack])\r\n\r\n    useEffect(() => {\r\n        if (!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n    useEffect(() => {\r\n        if (!search) return setSearchResults([])\r\n        if (!accessToken) return\r\n\r\n        let cancel = false\r\n\r\n        spotifyApi.searchTracks(search).then(res => {\r\n            if (cancel) return\r\n            setSearchResults(\r\n                res.body.tracks.items.map(track => {\r\n                const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\r\n                    if (image.height < smallest.height) return image\r\n                    return smallest\r\n                }, track.album.images[0])\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    title: track.name,\r\n                    uri: track.uri,\r\n                    albumUrl: smallestAlbumImage.url\r\n                }\r\n            }))\r\n        })\r\n        return () => cancel = true\r\n    }, [search, accessToken])\r\n\r\n    return (\r\n        <Container className='d-flex flex-column py-2' style={{\r\n        height: \"100vh\"}}>\r\n            <Form.Control \r\n            type=\"search\" \r\n            placeholder='Search Songs/Artists' \r\n            value={search}\r\n            onChange={e => setSearch(e.target.value)}/>\r\n\r\n        <div className='flex-grow-1 my-2' style={{overflowY: \"auto\"}}> \r\n            {searchResults.map(track => (\r\n                <TrackSearchResult \r\n                track={track} \r\n                key={track.uri} \r\n                chooseTrack= {chooseTrack}\r\n                />\r\n            ))}\r\n            {searchResults.length === 0 && (\r\n                <div className='text-center' style={{whiteSpace:\"pre\"}}>\r\n                    {lyrics}\r\n                    </div>\r\n            )}\r\n        </div>\r\n        <div> <Player \r\n        accessToken={accessToken}\r\n         trackUri={playingTrack?.uri}\r\n         /> </div>\r\n    </Container> \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}