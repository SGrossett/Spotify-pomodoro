{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kweku\\\\Desktop\\\\My Coding Stuff\\\\pomo-spotify-test\\\\spotify-test\\\\src\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from './useAuth';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '7134148fb4ca431591f3f11a054bbb83'\n});\nexport default function Dashboard(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults.map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"s+eFzjIqp3Ecwu42v01DlJ5pJlA=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/Kweku/Desktop/My Coding Stuff/pomo-spotify-test/spotify-test/src/Dashboard.js"],"names":["React","useState","useEffect","useAuth","Container","Form","SpotifyWebApi","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","setAccessToken","cancel","searchTracks","then","res","body","tracks","items","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","e","target","value","overflowY"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport useAuth from './useAuth';\r\nimport { Container, Form } from 'react-bootstrap';\r\nimport SpotifyWebApi from 'spotify-web-api-node';\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId : '7134148fb4ca431591f3f11a054bbb83',\r\n})\r\n\r\nexport default function Dashboard({code}) {\r\n    const accessToken = useAuth(code)\r\n    const [search, setSearch] = useState('');\r\n    const [searchResults, setSearchResults] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n    useEffect(() => {\r\n        if (!search) return setSearchResults([])\r\n        if (!accessToken) return\r\n\r\n        let cancel = false\r\n\r\n        spotifyApi.searchTracks(search).then(res => {\r\n            if (cancel) return\r\n            setSearchResults(\r\n                res.body.tracks.items.map(track => {\r\n                const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\r\n                    if (image.height < smallest.height) return image\r\n                    return smallest\r\n                }, track.album.images[0])\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    title: track.name,\r\n                    uri: track.uri,\r\n                    albumUrl: smallestAlbumImage.url\r\n                }\r\n            }))\r\n        })\r\n        return () => cancel = true\r\n    }, [search, accessToken])\r\n\r\n    return (\r\n        <Container className='d-flex flex-column py-2' style={{\r\n        height: \"100vh\"}}>\r\n            <Form.Control \r\n            type=\"search\" \r\n            placeholder='Search Songs/Artists' \r\n            value={search}\r\n            onChange={e => setSearch(e.target.value)}/>\r\n\r\n        <div className='flex-grow-1 my-2' style={{overflowY: \"auto\"}}> \r\n            {searchResults.map}\r\n        </div>\r\n        <div>Bottom</div>\r\n    </Container> \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}